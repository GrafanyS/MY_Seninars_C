/*
NewMethod();

static void NewMethod()
{
    int n1, n2, quad;


    Console.Write("Input first namber: ");
    n1 = Convert.ToInt32(Console.ReadLine());

    Console.Write("Input second namber: ");
    n2 = Convert.ToInt32(Console.ReadLine());

    quad = n2 * n2;

    if (quad == n1)
    {
        Console.Write("Yes");
    }
    else
    {
        Console.Write("No");
    }
}
*/



int number;// обявляем переменную простое число
string txt;// обявляем переменную  строку текст
try
//Блок try содержит защищенный код, который может вызвать исключение. 
//Этот блок выполняется, пока не возникнет исключение или пока он не будет успешно завершен.
{
    Console.WriteLine("Введите число от 1 до 7 включительно");//Вывод в консоли строки с предложением ввести число

    number = Convert.ToInt32(Console.ReadLine());
    //Преобразует заданное строковое представление числа в эквивалентное 32-битовое целое число со знаком
    //Метод ReadLine считывает строку из стандартного входного потока
    switch (number)
    //Эта составная проверка обладает одной отличительной чертой: каждая ветка здесь — это проверка значения переменной status.
    //Switch позволяет записать этот код короче и выразительнее:
    //Свитч — довольно сложная конструкция с точки зрения количества элементов, из которых она состоит:
    //Внешнее описание, в которое входит ключевое слово switch.Переменная, по значениям которой switch будет выбирать поведение.
    //И фигурные скобки для вариантов выбора.
    //Конструкции case и default, внутри которых описывается поведение для разных значений рассматриваемой переменной.
    //Каждый case соответствует if . default - это особая ситуация, соответствующая ветке else в
    //условных конструкциях. Как else, указывать default не обязательно.
    //break нужен для предотвращения «проваливания». Если его не указать, то после выполнения нужного case выполнение
    //перейдет к следующему case, и так либо до ближайшего break, либо до конца switch.
    {
        case 1:
            txt = "понедельник";
            break;
        case 2:
            txt = "вторник";
            break;
        case 3:
            txt = "среда";
            break;
        case 4:
            txt = "четверг";
            break;
        case 5:
            txt = "пятница";
            break;
        case 6:
            txt = "суббота";
            break;
        case 7:
            txt = "воскресение";
            break;
        default:
            txt = "некорректное значение";
            break;
    }
    Console.WriteLine(txt, "День недели");//Выводит строку текст дня недели
}
catch //Выводится если ввели не цыфру а букву
{
    Console.WriteLine("Вы не ввели число", "Ошибка");
    Console.WriteLine("Завершение программы");
}

// // дни недели.









